/*
 * Copyright 2010-2013 Ning, Inc.
 *
 * Ning licenses this file to you under the Apache License, version 2.0
 * (the "License"); you may not use this file except in compliance with the
 * License.  You may obtain a copy of the License at:
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the
 * License for the specific language governing permissions and limitations
 * under the License.
 */

package com.ning.metrics.meteo.esper;

import org.testng.Assert;
import org.testng.annotations.Test;

import java.util.ArrayList;

public class TestHoltWintersComputer
{
    // Atmospheric concentrations of CO2 are expressed in parts per million (ppm) and
    // reported in the preliminary 1997 SIO manometric mole fraction scale.
    // A time series of 468 observations; monthly from 1959 to 1997.
    private static double[] CO2 = {315.42, 316.31, 316.5, 317.56, 318.13, 318, 316.39,
        314.65, 313.68, 313.18, 314.66, 315.43, 316.27, 316.81, 317.42,
        318.87, 319.87, 319.43, 318.01, 315.74, 314, 313.68, 314.84,
        316.03, 316.73, 317.54, 318.38, 319.31, 320.42, 319.61, 318.42,
        316.63, 314.83, 315.16, 315.94, 316.85, 317.78, 318.4, 319.53,
        320.42, 320.85, 320.45, 319.45, 317.25, 316.11, 315.27, 316.53,
        317.53, 318.58, 318.92, 319.7, 321.22, 322.08, 321.31, 319.58,
        317.61, 316.05, 315.83, 316.91, 318.2, 319.41, 320.07, 320.74,
        321.4, 322.06, 321.73, 320.27, 318.54, 316.54, 316.71, 317.53,
        318.55, 319.27, 320.28, 320.73, 321.97, 322, 321.71, 321.05,
        318.71, 317.66, 317.14, 318.7, 319.25, 320.46, 321.43, 322.23,
        323.54, 323.91, 323.59, 322.24, 320.2, 318.48, 317.94, 319.63,
        320.87, 322.17, 322.34, 322.88, 324.25, 324.83, 323.93, 322.38,
        320.76, 319.1, 319.24, 320.56, 321.8, 322.4, 322.99, 323.73,
        324.86, 325.4, 325.2, 323.98, 321.95, 320.18, 320.09, 321.16,
        322.74, 323.83, 324.26, 325.47, 326.5, 327.21, 326.54, 325.72,
        323.5, 322.22, 321.62, 322.69, 323.95, 324.89, 325.82, 326.77,
        327.97, 327.91, 327.5, 326.18, 324.53, 322.93, 322.9, 323.85,
        324.96, 326.01, 326.51, 327.01, 327.62, 328.76, 328.4, 327.2,
        325.27, 323.2, 323.4, 324.63, 325.85, 326.6, 327.47, 327.58,
        329.56, 329.9, 328.92, 327.88, 326.16, 324.68, 325.04, 326.34,
        327.39, 328.37, 329.4, 330.14, 331.33, 332.31, 331.9, 330.7,
        329.15, 327.35, 327.02, 327.99, 328.48, 329.18, 330.55, 331.32,
        332.48, 332.92, 332.08, 331.01, 329.23, 327.27, 327.21, 328.29,
        329.41, 330.23, 331.25, 331.87, 333.14, 333.8, 333.43, 331.73,
        329.9, 328.4, 328.17, 329.32, 330.59, 331.58, 332.39, 333.33,
        334.41, 334.71, 334.17, 332.89, 330.77, 329.14, 328.78, 330.14,
        331.52, 332.75, 333.24, 334.53, 335.9, 336.57, 336.1, 334.76,
        332.59, 331.42, 330.98, 332.24, 333.68, 334.8, 335.22, 336.47,
        337.59, 337.84, 337.72, 336.37, 334.51, 332.6, 332.38, 333.75,
        334.78, 336.05, 336.59, 337.79, 338.71, 339.3, 339.12, 337.56,
        335.92, 333.75, 333.7, 335.12, 336.56, 337.84, 338.19, 339.91,
        340.6, 341.29, 341, 339.39, 337.43, 335.72, 335.84, 336.93, 338.04,
        339.06, 340.3, 341.21, 342.33, 342.74, 342.08, 340.32, 338.26,
        336.52, 336.68, 338.19, 339.44, 340.57, 341.44, 342.53, 343.39,
        343.96, 343.18, 341.88, 339.65, 337.81, 337.69, 339.09, 340.32,
        341.2, 342.35, 342.93, 344.77, 345.58, 345.14, 343.81, 342.21,
        339.69, 339.82, 340.98, 342.82, 343.52, 344.33, 345.11, 346.88,
        347.25, 346.62, 345.22, 343.11, 340.9, 341.18, 342.8, 344.04,
        344.79, 345.82, 347.25, 348.17, 348.74, 348.07, 346.38, 344.51,
        342.92, 342.62, 344.06, 345.38, 346.11, 346.78, 347.68, 349.37,
        350.03, 349.37, 347.76, 345.73, 344.68, 343.99, 345.48, 346.72,
        347.84, 348.29, 349.23, 350.8, 351.66, 351.07, 349.33, 347.92,
        346.27, 346.18, 347.64, 348.78, 350.25, 351.54, 352.05, 353.41,
        354.04, 353.62, 352.22, 350.27, 348.55, 348.72, 349.91, 351.18,
        352.6, 352.92, 353.53, 355.26, 355.52, 354.97, 353.75, 351.52,
        349.64, 349.83, 351.14, 352.37, 353.5, 354.55, 355.23, 356.04,
        357, 356.07, 354.67, 352.76, 350.82, 351.04, 352.69, 354.07,
        354.59, 355.63, 357.03, 358.48, 359.22, 358.12, 356.06, 353.92,
        352.05, 352.11, 353.64, 354.89, 355.88, 356.63, 357.72, 359.07,
        359.58, 359.17, 356.94, 354.92, 352.94, 353.23, 354.09, 355.33,
        356.63, 357.1, 358.32, 359.41, 360.23, 359.55, 357.53, 355.48,
        353.67, 353.95, 355.3, 356.78, 358.34, 358.89, 359.95, 361.25,
        361.67, 360.94, 359.55, 357.49, 355.84, 356, 357.59, 359.05,
        359.98, 361.03, 361.66, 363.48, 363.82, 363.3, 361.94, 359.5,
        358.11, 357.8, 359.61, 360.74, 362.09, 363.29, 364.06, 364.76,
        365.45, 365.01, 363.7, 361.54, 359.51, 359.65, 360.8, 362.38,
        363.23, 364.06, 364.61, 366.4, 366.84, 365.68, 364.52, 362.57,
        360.24, 360.83, 362.49, 364.34};

    @Test(groups = "fast")
    public void testExponentialSmoothing() throws Exception
    {
        // seasonal <- c(315.42,316.31,316.5,317.56,318.13,318.0,316.39,314.65,313.68,313.18,314.66,315.430)
        // smooth<-HoltWinters(co2, alpha=0.513, beta=0.009, gamma=0.47, l.start = 316.31, b.start = 0.8899, s.start=seasonal)
        double[] smooth = {632.6199, 470.6517138117, 390.639939945329, 352.519079609679,
            334.05271282566, 324.807110616726, 318.573956221258, 314.677346244792,
            312.39009345864, 310.861014290286, 311.945207992319, 312.371655579909,
            240.017367520252, 315.999938806999, 333.983110569806, 334.573652058746,
            330.176145953271, 325.418803950448, 320.265797767209, 316.277923555616,
            313.942130284222, 312.506783696153, 313.709914980136, 314.153694426107,
            258.206391730428, 308.290378178855, 326.885384043855, 331.962337737318,
            330.929290097554, 327.103001449562, 322.613435964528, 318.636022780413,
            315.706535518878, 314.599835917296, 314.852731831459, 315.280998039128,
            272.282177787016, 304.331883209043, 321.345478091202, 328.538310633349,
            330.171617131195, 328.322976268678, 324.619536686661, 320.249920320124,
            317.244394499389, 315.529275937077, 315.971697295194, 316.296858684042,
            283.346469866347, 302.98422072885, 317.671212389663, 326.113577819763,
            329.047705401723, 328.158953398938, 325.356206604106, 321.661069754128,
            318.886532205992, 317.064216795264, 317.455197113874, 317.692846472184,
            292.154629456775, 302.946635542762, 314.64191077189, 322.955434013277,
            327.402348850349, 327.582871640154, 325.503397666745, 322.716275219386,
            319.794407417494, 318.667408728304, 318.67979890366, 319.193316689245,
            299.375812881207, 304.928083659635, 313.712321323853, 321.753808998084,
            326.72502020431, 328.25053069795, 327.248874473571, 324.407553092775,
            321.938371074557, 320.392491730605, 320.401652401664, 320.630749432352,
            305.834180562268, 307.994072136799, 313.927190729432, 320.735554358964,
            325.632592487852, 327.869754407699, 327.263146742103, 324.775341352022,
            322.68273488419, 321.409209096453, 322.055645456275, 322.248601338102,
            310.884213984301, 310.194413931785, 314.169070141805, 320.118714147262,
            324.736760334325, 327.094362791044, 327.41708516041, 325.972395010836,
            324.077810417074, 323.067359201408, 323.550821712839, 323.61751224833,
            314.862944082395, 313.238133300115, 315.633856128485, 320.69415238368,
            325.002445622681, 327.651552860155, 328.111038194394, 327.162123359016,
            325.575662456814, 325.151306487157, 325.579580295781, 325.829220002201,
            318.901905001978, 316.293265081289, 317.717734357679, 321.516936555609,
            325.400156354577, 327.512541380195, 328.315946190695, 327.28112061486,
            326.310521800961, 325.911466894706, 326.833960290654, 327.346665843318,
            322.037659395571, 319.273468562948, 319.472460111632, 321.950681048952,
            324.576662236975, 327.025313452676, 328.115857310526, 327.633280454239,
            326.786521061241, 326.43425146936, 327.419237126136, 328.237334186122,
            324.452278576477, 321.559555189106, 321.201396026417, 322.706348845415,
            325.654117377815, 327.546621857208, 328.16684580671, 327.73318920143,
            327.072944962815, 327.526085521386, 328.917589149749, 330.006457871525,
            327.211037511667, 324.736912268583, 323.904838549138, 325.50309930338,
            327.380672604739, 329.022872060225, 330.098029166384, 329.893526195008,
            329.542717573599, 330.149632681378, 331.259457934922, 332.050712533749,
            329.691720930135, 327.21668620672, 326.110222730836, 327.132232717243,
            328.599570986785, 329.497872317528, 329.937766244086, 329.705541203304,
            329.200744621037, 329.769052036626, 331.183665611647, 332.144567593348,
            330.96437149966, 329.30385962159, 327.957527918885, 328.381863229994,
            329.345109617861, 329.948666675291, 330.54256194394, 330.054006865444,
            329.421400778979, 330.356911632473, 331.932085037167, 333.121395360026,
            332.551731113159, 331.430379835043, 330.070865880351, 330.393415500582,
            330.943224253799, 331.004152748724, 330.942909095066, 330.572275038568,
            329.958455970874, 330.769127112302, 332.387182587005, 333.822578233372,
            333.768766476992, 333.106613644051, 331.887023365704, 332.101458085541,
            332.515826636703, 332.621564870345, 332.478082160766, 331.916712349297,
            331.354369359081, 332.394809914161, 334.295263315773, 335.864159651928,
            336.21322065248, 335.658880246251, 334.763946321689, 334.801720130697,
            334.791154583771, 334.27955610589, 333.872714893958, 333.084625321266,
            332.803484944026, 333.400237239287, 335.391560859964, 337.180141353755,
            337.630824661524, 337.248707039198, 336.766127820506, 336.732675566155,
            336.393008840308, 335.924895274756, 335.201805893582, 334.121861316618,
            333.685688502361, 334.260679663157, 336.375469058004, 338.220193243978,
            339.273129757172, 339.213651458151, 338.963104696317, 339.142166975354,
            338.78016206581, 338.203791045496, 337.112201796518, 335.890145981813,
            334.950747875711, 335.773704508002, 338.083381713966, 339.920590626881,
            340.944169507801, 340.776684517701, 341.28994680413, 341.086623246293,
            340.881841158384, 340.060142908929, 338.471478383165, 336.878165930895,
            335.698461241271, 336.404723298707, 338.560782940852, 340.654974426319,
            342.044228648093, 342.436128655376, 342.798253217822, 342.824882411587,
            342.43339773409, 341.497618167013, 339.714049827284, 338.195661649153,
            336.944143952512, 337.567549759719, 339.516070139068, 341.40715434494,
            342.821711757154, 343.265776494822, 343.854487368459, 343.750951097639,
            343.830235623758, 343.063453155581, 341.613453835047, 339.968700243772,
            339.01064910723, 339.39181159411, 341.396628395153, 343.166287816669,
            344.867022657463, 345.643320410699, 346.053997948597, 346.413119211818,
            346.40165604462, 345.26834136604, 343.491693455507, 341.632567143605,
            339.937201593777, 340.419656532292, 342.416404781232, 344.6312798229,
            345.994745089896, 346.869871761194, 347.519575435691, 348.570068051888,
            348.219627101074, 347.050206591945, 345.204930163649, 343.017424051004,
            341.224955253042, 342.053016459494, 343.879748222312, 345.781641156983,
            347.117322782918, 348.145435340979, 348.82665925502, 349.408092251015,
            349.466448691589, 348.446114497885, 346.599359159737, 344.48923895177,
            342.624883569032, 343.392073446952, 345.158916633018, 347.013273609633,
            348.279820563417, 349.533620777834, 350.344501040087, 351.213409395373,
            351.232443789435, 350.239698568993, 348.41357101892, 346.209826802644,
            344.788162892905, 344.940562692825, 346.988934520356, 348.88927594126,
            350.234843872773, 351.558339231898, 353.053274202373, 354.166159384658,
            354.226713767753, 353.033058433444, 351.122703446852, 349.215161913299,
            347.423759066478, 347.355325174001, 349.350919677559, 351.04726172599,
            352.563805146728, 353.908864695997, 354.694435498363, 355.794420125094,
            356.113304004422, 354.900509469872, 352.85148780474, 350.841304340091,
            348.880599939235, 348.684174221674, 350.387718620794, 352.091091372097,
            353.66670122155, 354.678291293767, 355.874365207485, 357.396966633718,
            357.288225047247, 356.392870432551, 354.339738205741, 351.992520709745,
            350.101036886733, 349.977331445376, 351.552769322099, 353.351679596376,
            355.059149634289, 355.931416500777, 356.926794887742, 358.679485942274,
            359.424193695314, 358.579442637743, 356.620539207018, 353.927097583756,
            351.634256808929, 351.439376171881, 352.834657443724, 354.369788226891,
            355.705277340788, 356.950664709566, 358.033115316245, 359.50536159388,
            360.129309100566, 359.048818032355, 357.367043896943, 354.871787835235,
            352.707385565795, 352.479334579464, 353.949317583912, 355.077950020344,
            356.195290918059, 357.460360251311, 358.52368989585, 360.024110550963,
            360.529473201228, 359.730964945696, 357.767659309011, 355.478166572936,
            353.331793387935, 353.27658893962, 354.567065824552, 356.027493138665,
            357.448166671531, 358.772657279137, 360.126014336259, 361.555924657948,
            362.302060196834, 361.369180795528, 359.273538270846, 357.312955432328,
            355.344615283229, 355.458651102567, 356.706277566473, 358.260508661198,
            359.744185835545, 360.563976785835, 362.039781626051, 363.345204547803,
            364.254595537704, 363.482179465035, 361.688630437851, 359.706171170514,
            357.626088364335, 357.756688403044, 358.836817340932, 360.321892344401,
            361.495723210675, 362.561157748697, 363.988465632368, 365.655552079543,
            365.913646640652, 365.191568496771, 363.505036383706, 361.396122392161,
            359.662391862308, 359.371605649972, 360.746363990939, 361.784688061872,
            363.094215846737, 363.957595259186, 364.912548144631, 366.16410535331,
            367.104446317609, 366.552997910417, 364.598629718524, 362.337088864328,
            360.581050077616, 360.291044484372, 361.748188404933, 363.266870699878};
        double alpha = 0.513;
        double beta = 0.009;
        double gamma = 0.47;

        HoltWintersComputer computer = new HoltWintersComputer(alpha, beta, gamma, 12);
        Assert.assertEquals(computer.getAlpha(), alpha);
        Assert.assertEquals(computer.getBeta(), beta);
        Assert.assertEquals(computer.getGamma(), gamma);
        compare(computer, CO2, smooth, 1);
    }

    @Test(groups = "fast")
    public void testSimpleExponentialSmoothing() throws Exception
    {
        // series<-ts(c(315.42, 316.31, 316.50, 317.56, 318.13, 318.00, 316.39, 314.65, 313.68, 313.18, 314.66, 315.43))
        double[] series = {315.42, 316.31, 316.50, 317.56, 318.13, 318.00, 316.39, 314.65, 313.68, 313.18, 314.66, 315.43};

        // smooth<-HoltWinters(co2, alpha=0.8, beta=FALSE, gamma=FALSE)
        // predict(smooth, 1)
        double[] smooth = {315.4200, 316.1320, 316.4264, 317.3333, 317.9707, 317.9941, 316.7108, 315.0622, 313.9564, 313.3353, 314.3951, 315.223};

        HoltWintersComputer computer = new HoltWintersComputer(0.8);
        Assert.assertEquals(computer.getAlpha(), 0.8);
        compare(computer, series, smooth, 0);
    }

    @Test(groups = "fast")
    public void testDoubleExponentialSmoothing() throws Exception
    {
        // series<-ts(c(315.42, 316.31, 316.50, 317.56, 318.13, 318.00, 316.39, 314.65, 313.68, 313.18, 314.66, 315.43))
        double[] series = {315.42, 316.31, 316.50, 317.56, 318.13, 318.00, 316.39, 314.65, 313.68, 313.18, 314.66, 315.43};

        // smooth<-HoltWinters(series, alpha=0.8, beta=0.2, gamma=FALSE, l.start = 316.31, b.start = 0.8899)
        double[] smooth = {317.1999, 317.4179, 318.3322, 318.9387, 318.8058, 317.1047, 314.9798, 313.5708, 312.8265, 314.1550};

        HoltWintersComputer computer = new HoltWintersComputer(0.8, 0.2);
        Assert.assertEquals(computer.getAlpha(), 0.8);
        Assert.assertEquals(computer.getBeta(), 0.2);
        compare(computer, series, smooth, 1);
    }

    private ArrayList<Double> compare(HoltWintersComputer computer, double[] series, double[] smooth, int start)
    {
        ArrayList<Double> results = new ArrayList<Double>();

        for (double value : series) {
            computer.addNextValue(value);
            double forecast = computer.getForecast(1);
            results.add(forecast);
        }

        int i = 0;
        for (double smoothValue : smooth) {
            //Assert.assertEquals(results.get(start + i), smoothValue, 0.0002, String.format("%dth value doesn't match", i));
            i++;
        }

        return results;
    }
}
